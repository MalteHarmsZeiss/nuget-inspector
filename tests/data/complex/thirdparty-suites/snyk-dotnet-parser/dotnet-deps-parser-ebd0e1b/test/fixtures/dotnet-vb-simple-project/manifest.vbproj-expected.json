{
  "headers": [
    {
      "tool_name": "nuget-inspector",
      "tool_homepageurl": "https://github.com/nexB/nuget-inspector",
      "tool_version": "0.0.0",
      "options": [
        "--project-file /complex/thirdparty-suites/snyk-dotnet-parser/dotnet-deps-parser-ebd0e1b/test/fixtures/dotnet-vb-simple-project/manifest.vbproj"
      ],
      "project_framework": "net461",
      "notice": "Dependency tree generated with nuget-inspector.\nnuget-inspector is a free software tool from nexB Inc. and others.\nVisit https://github.com/nexB/nuget-inspector/ for support and download.",
      "warnings": [],
      "errors": [
        "Failed to process project file: /complex/thirdparty-suites/snyk-dotnet-parser/dotnet-deps-parser-ebd0e1b/test/fixtures/dotnet-vb-simple-project/manifest.vbproj with:\nMicrosoft.Build.Exceptions.InvalidProjectFileException: The imported project \"/usr/share/dotnet/sdk/6.0.400/Microsoft/VisualStudio/v17.0/WebApplications/Microsoft.WebApplication.targets\" was not found. Confirm that the expression in the Import declaration \"/usr/share/dotnet/sdk/6.0.400/Microsoft/VisualStudio/v17.0/WebApplications/Microsoft.WebApplication.targets\" is correct, and that the file exists on disk.  /complex/thirdparty-suites/snyk-dotnet-parser/dotnet-deps-parser-ebd0e1b/test/fixtures/dotnet-vb-simple-project/manifest.vbproj\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(String errorSubCategoryResourceName, IElementLocation elementLocation, String resourceName, Object[] args)\n   at Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject[T1,T2](IElementLocation elementLocation, String resourceName, T1 arg0, T2 arg1)\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpression(String directoryOfImportingFile, ProjectImportElement importElement, String unescapedExpression, Boolean throwOnFileNotExistsError, List`1& imports)\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, SdkResult& sdkResult, Boolean throwOnFileNotExistsError)\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement, SdkResult& sdkResult)\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate()\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(IEvaluatorData`4 data, Project project, ProjectRootElement root, ProjectLoadSettings loadSettings, Int32 maxNodeCount, PropertyDictionary`1 environmentProperties, ILoggingService loggingService, IItemFactory`2 itemFactory, IToolsetProvider toolsetProvider, ProjectRootElementCacheBase projectRootElementCache, BuildEventContext buildEventContext, ISdkResolverService sdkResolverService, Int32 submissionId, EvaluationContext evaluationContext, Boolean interactive)\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.ReevaluateIfNecessary(EvaluationContext evaluationContext)\n   at Microsoft.Build.Evaluation.Project.ProjectImpl.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext, IDirectoryCacheFactory directoryCacheFactory)\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion)\n   at NugetInspector.ProjectFileProcessor.GetPackageReferences() in ./nuget-inspector/ProjectFileProcessor.cs:line 134\n   at NugetInspector.ProjectFileProcessor.ResolveUsingLib() in ./nuget-inspector/ProjectFileProcessor.cs:line 426\n   at NugetInspector.ProjectScanner.RunScan() in ./nuget-inspector/ProjectScanner.cs:line 293"
      ]
    }
  ],
  "files": [],
  "packages": [
    {
      "type": "nuget",
      "namespace": "",
      "name": "manifest",
      "version": null,
      "qualifiers": "",
      "subpath": "",
      "purl": "",
      "primary_language": "C#",
      "description": "",
      "release_date": "",
      "parties": [],
      "keywords": [],
      "homepage_url": "",
      "download_url": "",
      "size": 0,
      "sha1": "",
      "md5": "",
      "sha256": "",
      "sha512": "",
      "bug_tracking_url": "",
      "code_view_url": "",
      "vcs_url": "",
      "copyright": "",
      "license_expression": "",
      "declared_license": "",
      "notice_text": "",
      "source_packages": [],
      "extra_data": {},
      "repository_homepage_url": "",
      "repository_download_url": "",
      "api_data_url": "",
      "datasource_id": "",
      "datafile_path": "/complex/thirdparty-suites/snyk-dotnet-parser/dotnet-deps-parser-ebd0e1b/test/fixtures/dotnet-vb-simple-project/manifest.vbproj",
      "dependencies": [],
      "warnings": [],
      "errors": []
    }
  ],
  "dependencies": []
}